

<style>

    .remove {
        color: white;
        background-color: #ff4757;
    }

    .tablescroll {
        overflow-y: scroll;
    }

    #btncrear {
        margin-top: 1vh;
        background: linear-gradient(176deg, rgba(3,104,221,1) 0%, rgba(21,31,133,1) 40%, rgba(29,102,187,1) 100%);
        color: white;
        padding: 1vh;
        min-width: 25%;
        text-align: center;
    }
    #btnagregar {
        margin-top: 1vh;
        background: #341f97;
        color: white;
        padding: 1vh;
        min-width: 25%;
        text-align: center;
    }
    #btneditar {
        margin-top: 1vh;
        background: #222f3e;
        color: white;
        padding: 1vh;
        min-width: 25%;
        text-align: center;
    }
    .blocks{
        display:grid;
        width:100%;
        height:100%;
        grid-template-columns:repeat(auto-fill,minmax(12rem,1fr));
        grid-column-gap:1px;
        grid-auto-rows:12rem;
    }
    .block {
        display: grid;
        max-height: 12rem;
        min-width: 99%;
        height: 100%;
        width: 99%;
        grid-template-rows: 20% 60% 20%;
        text-align: center;
        background-color:white;
        box-shadow: 2px 2px 8px 4px #d3d3d3d1;
        border-radius: 15px;
    }
    .block img{
        max-width:100%;
        max-height:100%;
        width:100%;
        height:100%;
    }
    .block a{
        width:100%;
    }
    h1,h2{
        text-align:center;
    }
   
</style>


<div class="container-fluid" style="margin-top:2vh;margin-bottom:1vh;">
    <div class="row">
        <div class="col-md-6 form">
            <h1>Mantenimiento de Platos</h1>
            <h2>Crear Nuevo Plato</h2>
            <div>
                <div class="form-group">
                    <label for="nombre">Nombre:</label>
                    <input type="text" value="" class="form-control" id="nombre" name="nombre" required>
                </div>
                <div class="form-group">
                    <label for="descripcion">Descripción:</label>
                    <textarea class="form-control" id="descripcion" name="descripcion" required>
                    </textarea>
                </div>
                <div class="form-group">
                    <label for="precio">Precio:</label>
                    <input type="number" value="0" class="form-control" id="precio" name="precio" required>
                </div>
                <div class="form-group">
                    <label for="link">Link de la imágen:</label>
                    <input type="text" value="" class="form-control" id="link" name="link" required>
                </div>
                <div class="form-group">
                    <label for="categoria">Categoría:</label>
                    <select class="form-control" id="categoria" name="categoria" required>
                        <option value="local">Local</option>
                        <option value="extranjero">Extranjero</option>
                    </select>
                </div>
                <button id="btnagregar" class="btn button">Crear Nuevo</button>
                <button id="btneditar" disabled class="btn button">Modificar</button>
                <button id="btncrear" disabled class="btn button">Guardar</button>
            </div>
        </div>

        <div class="col-md-6">
            <h2>Lista de Platos</h2>

            <div class="blocks">
                @foreach (var plato in Model)
                {
                    <div class="block" data-id="@plato.Id">
                        <div>@plato.Nombre</div>
                        <img src="@plato.Imagen"/>
                        <div class="removebtns" data-id="@plato.Id">
                            <a href="@Url.Action("Eliminar",
                                    new { id = plato.Id })"
                               class="btn btn-sm remove">Eliminar</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script defer>
    var selected = 0;
    var nombre = document.querySelector('#nombre');
    var descripcion = document.querySelector('#descripcion');
    var precio = document.querySelector('#precio');
    var categoria = document.querySelector('#categoria');
    var link = document.querySelector('#link');
    var btncrear = document.querySelector('#btncrear');
    var btnagregar = document.querySelector('#btnagregar');
    var btneditar = document.querySelector('#btneditar');
    var blocks = document.querySelectorAll('.block');
    var removes = document.querySelectorAll('.removebtns');

    removes.forEach((rem) => {
        rem.addEventListener('click', async(e) => {
            e.preventDefault();
            e.stopPropagation();
            let id = rem.dataset.id;
            selected = id;
            await eliminarPlato(id);
        });
    });
    blocks.forEach( (block)=> {
        block.addEventListener('click', async(e) => {
            e.preventDefault();
            e.stopPropagation();
            let id = block.dataset.id;
            selected = id;
            btneditar.disabled = false;
            btncrear.disabled = true;
            await obtenerPlato(id);
        });
    });

    btnagregar.addEventListener('click', async (e) => {
        e.preventDefault();
        reset();
    });

    btncrear.addEventListener('click', async (e) => {
        e.preventDefault();
        await crearPlato();
    });

    btneditar.addEventListener('click', async (e) => {
        e.preventDefault();
        if (selected == 0) {
            alert('Debe seleccionar un plato primero!');
            return false;
        }
        await modificarPlato(selected);
    });

    async function obtenerPlato(id) {
        try {

            // Enviar la solicitud al servidor 
            let response = await fetch('/Platos/GetById?id='+id, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            // Verificar el estado de la respuesta
            if (response.ok) {
                let result = await response.json();
                nombre.value = result.nombre;
                descripcion.value = result.descripcion;
                precio.value = result.precio;
                categoria.value = result.categoria;
                link.value = result.imagen;
            } else {
                alert('Error en la solicitud');
                selected = 0;
                reset();
            }
        } catch (error) {
            reset();
            selected = 0;
            alert(error);
        }
    }

    function reset()
    {
        nombre.value = '';
        descripcion.value = '';
        precio.value = '';
        categoria.value = '';
        link.value = '';
        selected = 0;
        btneditar.disabled = true;
        btncrear.disabled = false;
    }
    async function crearPlato() {
        try {
          
            let data = {
                nombre: nombre.value,
                descripcion: descripcion.value,
                precio: precio.value,
                categoria: categoria.value,
                imagen: link.value
            };

            // Enviar la solicitud al servidor 
            let response = await fetch('/Platos/Crear', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            // Verificar el estado de la respuesta
            if (response.ok) {
                let result = await response.text();
                if (result == null ||
                    result == undefined
                    || result == typeof (undefined)
                    || result == typeof(null)||
                    !result.includes('correctamente')) {

                    alert(result);
                    return false;
                }
                alert(result);
                location.href = "/Platos";
            } else {
                alert('Error en la solicitud');
            }
            
        } catch (error) {
            reset();
            alert(error);
        }
    }

    async function modificarPlato(id) {
        try {

            let data = {
                id: id,
                nombre: nombre.value,
                descripcion: descripcion.value,
                precio: precio.value,
                categoria: categoria.value,
                imagen: link.value
            };

            // Enviar la solicitud al servidor 
            let response = await fetch('/Platos/Update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            // Verificar el estado de la respuesta
            if (response.ok) {
                let result = await response.text();
                alert(result);
            } else {
                alert('Error en la solicitud');
            }
            location.href = "/Platos";
        } catch (error) {
            reset();
            alert(error);
        }
    }

    async function eliminarPlato(id) {
        try {

            let data = id;

            // Enviar la solicitud al servidor 
            let response = await fetch('/Platos/Delete', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            // Verificar el estado de la respuesta
            if (response.ok) {
                let result = await response.text();
                alert(result);
            } else {
                alert('Error en la solicitud');
            }
            location.href = "/Platos";
        } catch (error) {
            reset();
            alert(error);
        }
    }
</script>
